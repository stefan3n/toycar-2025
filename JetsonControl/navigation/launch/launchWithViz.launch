<launch>

    <node name="mpu_node" pkg="mpu6050_driver" type="mpu6050_node" output="screen">
        <rosparam file="$(find mpu6050_driver)/config/mpu_settings.yaml" command="load"/>
    </node>

    <param name="robot_description" textfile="$(find gbot_core)/urdf/head_2d.urdf" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
		
		<!-- Start RPLIDAR sensor node which provides LaserScan data  -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>

	<node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
		<rosparam command="load" file="$(find navigation)/config/laser_filter.yaml" />
	</node>

		
		<!-- Start Google Cartographer node with custom configuration file-->
    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find gbot_core)/configuration_files
          -configuration_basename gbot_lidar_2d.lua" output="screen">
	<remap from="scan" to="scan_filtered" />
    </node>

		<!-- Additional node which converts Cartographer map into ROS occupancy grid map. Not used and can be skipped in this case -->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />
    
    <remap from="/imu" to="/imu/data_raw" />

     <include file="$(find amcl)/examples/amcl_diff.launch" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find navigation)/config/global_costmap_params.yaml" command="load"/> 
        <rosparam file="$(find navigation)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find navigation)/config/local_costmap_params.yaml" command="load"/>
        <rosparam file="$(find navigation)/config/base_local_planner_params.yaml" command="load" />

	<rosparam file="$(find navigation)/config/global_planner_params.yaml" command="load" />

	<remap from="scan" to="scan_filtered" />
    </node>

    


    <!-- <node pkg="rviz" type="rviz" name="show_rviz" args="-d $(find gbot_core)/rviz/demo.rviz"/> -->

</launch>
